name: Pull Request Workflow

on:
  pull_request:
    branches:
      - master

env:
  NODE_ENV: test
  DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379

    steps:
      # Step 1 - Checkout code
      - uses: actions/checkout@v3

      # Step 2 - Setting up Node.js environment
      - uses: ./.github/workflows/shared

      # Step 3 - Running prettier check
      - name: Run Prettier Check
        run: npm run prettier

      # Step 4 - Running linter
      - name: Run Linter
        run: npm run lint

      # Step 5 - Wait for Redis to be healthy
      - name: Wait for Redis to be ready
        run: |
          echo "Waiting for Redis to be ready..."
          # Increased timeout and retry period
          until nc -z -v -w60 redis 6379; do
            echo "Waiting for Redis to be ready..."
            sleep 10  # Increased sleep duration between checks
          done
          echo "Redis is ready!"  

      # Step 6 - View Redis logs (optional for debugging)
      - name: View Redis Logs
        run: docker logs redis

      # Step 7 - Running tests
      - name: Run Tests
        run: npm test

      # Step 8 - Running build (only if everything else succeeds)
      - name: Run Build
        run: npm run build
